blueprint:
  name: "BLP1S Riser Auto Control (Enhanced)"
  description: >
    Automatically controls Bambu Lab P1S riser based on filament type (PLA or similar), printing status,
    and turns off 30 minutes after printing ends. Also works if manually triggered. Includes logging.
  domain: automation
  input:
    riser_switch:
      name: Riser Switch
      selector:
        entity:
          domain: switch
    printer_stage:
      name: Printer Stage Sensor
      selector:
        entity:
          domain: sensor
    filament_tray:
      name: Filament Tray Sensor
      selector:
        entity:
          domain: sensor
    pla_keyword:
      name: PLA Keywords
      description: Comma-separated keywords to match against filament tray (e.g., "pla, petg")
      default: "pla"
      selector:
        text:

mode: parallel

trigger:
  - platform: state
    id: start_print
    entity_id: !input printer_stage

  - platform: state
    id: tray_update
    entity_id: !input filament_tray

  - platform: state
    id: print_done
    entity_id: !input printer_stage

variables:
  riser: !input riser_switch
  tray: !input filament_tray
  stage: !input printer_stage
  keyword: !input pla_keyword
  stage_value: "{{ states(stage) | lower }}"
  matched: >
    {{ keyword.split(',') | map('trim') | map('lower') |
       select('in', states(tray) | lower) | list | count > 0 }}
  is_printing: "{{ stage_value == 'printing' }}"

action:
  - choose:
      - conditions:
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ trigger is not defined or trigger.id == 'start_print' }}"
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ trigger is defined and trigger.id == 'tray_update' }}"
                  - condition: template
                    value_template: "{{ is_printing }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ matched }}"
                sequence:
                  - service: switch.turn_on
                    target:
                      entity_id: "{{ riser }}"
                  - service: persistent_notification.create
                    data:
                      title: "Riser Activated"
                      message: "Matched filament ({{ states(tray) }}). Riser turned ON."
              - conditions:
                  - condition: template
                    value_template: "{{ not matched }}"
                sequence:
                  - service: switch.turn_off
                    target:
                      entity_id: "{{ riser }}"
                  - service: persistent_notification.create
                    data:
                      title: "Riser Deactivated"
                      message: "No matching filament. Riser turned OFF."
      - conditions:
          - condition: template
            value_template: "{{ trigger is defined and trigger.id == 'print_done' and not is_printing }}"
        sequence:
          - delay:
              minutes: 30
          - service: switch.turn_off
            target:
              entity_id: "{{ riser }}"
          - service: persistent_notification.create
            data:
              title: "Riser Auto-Off"
              message: "Print ended. Riser turned OFF after 30 minutes."

  - choose: []
    default:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ matched }}"
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: "{{ riser }}"
              - service: persistent_notification.create
                data:
                  title: "Manual Trigger"
                  message: "Matched filament ({{ states(tray) }}). Riser turned ON."
          - conditions:
              - condition: template
                value_template: "{{ not matched }}"
            sequence:
              - service: switch.turn_off
                target:
                  entity_id: "{{ riser }}"
              - service: persistent_notification.create
                data:
                  title: "Manual Trigger"
                  message: "No matching filament. Riser turned OFF."
